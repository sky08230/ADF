{
	"name": "pl_pipeline_test",
	"properties": {
		"activities": [
			{
				"name": "Append variable1",
				"type": "AppendVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "testvariable",
					"value": "python"
				}
			},
			{
				"name": "Fail1",
				"type": "Fail",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"message": "value not match",
					"errorCode": "500"
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Append variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_Json1",
						"type": "DatasetReference",
						"parameters": {
							"dsp_tag": {
								"value": "@variables('testvariable')[0]",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('testvariable')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_RestResource1",
									"type": "DatasetReference",
									"parameters": {
										"dsp_tag": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_Json1",
									"type": "DatasetReference",
									"parameters": {
										"dsp_tag": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Append variable2",
				"type": "AppendVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "output",
					"value": {
						"value": "@{activity('Lookup1').output.firstRow}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy data3",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Append variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "testvalule",
								"value": "$$FILEPATH"
							},
							{
								"name": "testvalue2",
								"value": {
									"value": "@{variables('output')}",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "result",
									"type": "String",
									"physicalType": "String"
								},
								"sink": {
									"name": "result",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "testvalule",
									"type": "String"
								},
								"sink": {
									"name": "testvalule",
									"type": "String",
									"physicalType": "String"
								}
							},
							{
								"source": {
									"name": "testvalue2",
									"type": "String"
								},
								"sink": {
									"name": "testvalue2",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "increment",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "temp",
					"value": {
						"value": "@add(variables('counter'),1)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "counter",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "increment",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "counter",
					"value": {
						"value": "@variables('temp')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Copy data4",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "counter",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"additionalColumns": [
							{
								"name": "newvalue",
								"value": {
									"value": "@variables('counter')",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "newvalue",
									"type": "String"
								},
								"sink": {
									"name": "newvalue",
									"type": "String",
									"physicalType": "String"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DelimitedText3",
						"type": "DatasetReference",
						"parameters": {
							"outputfile": {
								"value": "@variables('counter')",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"variables": {
			"testvariable": {
				"type": "Array"
			},
			"output": {
				"type": "Array"
			},
			"variable1": {
				"type": "Array"
			},
			"temp": {
				"type": "Integer",
				"defaultValue": 0
			},
			"counter": {
				"type": "Integer",
				"defaultValue": 0
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-05-03T22:29:05Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}